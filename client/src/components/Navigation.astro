---
const paths: { [key: string]: string } = {
  docs: "Noted Documentation",
  "writing-noted": "Writing Noted",
  customize: "Customize Noted",
  themes: "Themes",
  headers: "Headers",
  glass: "Glass Application",
  more: "More",
  widgets: "Basics",
  calendar: "Calendar",
  clock: "Clock",
  info: "Info",
  todos: "ToDos",
  shortcuts: "Shortcuts",
}
const currentPath = Astro.url.pathname.split("/").pop() || "docs"

const docs = await Astro.glob("../pages/docs/*.md")
const DOCSORDER = ["Getting Started", "Customize", "Widgets", "Shortcuts"]

const groupedDocs = docs.reduce((docs: any, object: any) => {
  const property = object.frontmatter.section
  docs[property] = docs[property] || []

  docs[property].push(object)
  docs[property].sort(
    (a: any, b: any) => a.frontmatter.order - b.frontmatter.order,
  )

  return docs
}, {})

const sortedGroupedDocs = Object.keys(groupedDocs)
  .sort((a, b) => DOCSORDER.indexOf(a) - DOCSORDER.indexOf(b))
  .reduce((obj: any, key: any) => {
    obj[key] = groupedDocs[key]
    return obj
  }, {})
---

<label
  for="navigation"
  class="fixed top-2 right-5 z-50 flex items-center justify-center w-10 h-10 mb-4 ml-4 bg-white border rounded-md shadow-sm cursor-pointer text-slate-600 border-slate-300 lg:hidden transition duration-200 ease-in-out active:scale-95"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="w-6 h-6"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <path stroke-linecap="round" stroke-linejoin="round" d="M4 8h16M4 16h16"
    ></path>
  </svg>
</label>
<input type="checkbox" name="navigation" id="navigation" class="hidden peer" />
<nav
  class="fixed top-[3.4rem] left-4 bg-white shadow-xl px-4 hidden rounded-md peer-checked:block lg:px-0 lg:block lg:shadow-none"
>
  <ul
    role="list"
    class="-ml-0.5 h-[calc(100vh-4.5rem)] lg:overflow-y-hidden overflow-y-auto hover:overflow-y-auto py-7 pl-0.5 space-y-8"
  >
    {
      Object.entries(sortedGroupedDocs).map((section: any) => (
        <li class="m-0 list-none">
          <h3 class="font-semibold tracking-tight text-slate-900">
            {section[0]}
          </h3>

          <ul role="list" class="pl-3 mt-3 space-y-2">
            {section[1].map((item: any) => (
              <li class="list-none m-0">
                <a
                  href={item.url}
                  class={` no-underline ${
                    paths[currentPath] === item.frontmatter.title
                      ? "text-[#6488ea]"
                      : "text-slate-900 hover:text-slate-800"
                  }`}
                >
                  {item.frontmatter.title}
                </a>
              </li>
            ))}
          </ul>
        </li>
      ))
    }
  </ul>
</nav>
